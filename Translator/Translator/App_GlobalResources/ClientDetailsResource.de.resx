<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBooking" xml:space="preserve">
    <value>Dann können Sie sich hier anmelden:</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Straße und Hausnummer</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>(Adresszeile bei Bedarf)</value>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Ort</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>Bitte gib deine Adresse an</value>
  </data>
  <data name="BookedBefore" xml:space="preserve">
    <value>Haben Sie schon einmal bei uns gebucht?</value>
  </data>
  <data name="ContactDetails" xml:space="preserve">
    <value>Falls Sie noch nie bei uns gebucht haben, benötigen wir Ihre Kontaktdaten, um die Buchung zu bestätigen:</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Geburtsdatum</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Bitte gib deine E-Mail-Adresse ein</value>
  </data>
  <data name="FindAddress" xml:space="preserve">
    <value>Adresse suchen</value>
  </data>
  <data name="FirstBooking" xml:space="preserve">
    <value>Erste Buchung?</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>Bitte gib den Vornamen ein</value>
  </data>
  <data name="HouseNumber" xml:space="preserve">
    <value>Hausnummer</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Ungültige E-Mail-Adresse</value>
  </data>
  <data name="InvalidPhone" xml:space="preserve">
    <value>Ungültige Telefonnummer</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Nachname</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Bitte gib deinen Nachnamen ein</value>
  </data>
  <data name="LoginRequired" xml:space="preserve">
    <value>Deine Daten sind bereits im System registriert. Bitte melde dich an, um eine Buchung durchzuführen</value>
  </data>
  <data name="NewBooking" xml:space="preserve">
    <value>Ist das deine erste Buchung, fülle bitte die folgenden Felder aus</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="PersonTitle" xml:space="preserve">
    <value>Anrede</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="PhoneRegex" xml:space="preserve">
    <value>^([\+][0-9]{1,3}[ \.\-])?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})$</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Bitte Telefonnummer angeben</value>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>Postleitzahl</value>
  </data>
  <data name="RUJumping" xml:space="preserve">
    <value>Wirst du mitspringen?</value>
  </data>
  <data name="SelectAddress" xml:space="preserve">
    <value>Adresse auswählen</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="YourDetails" xml:space="preserve">
    <value>Deine Angaben</value>
  </data>
  <data name="PostCodeRequired" xml:space="preserve">
    <value>Bitte gib deine Postleitzahl an</value>
  </data>
  <data name="ResendEmail" xml:space="preserve">
    <value>E-Mail erneut senden</value>
  </data>
  <data name="HasWaiver" xml:space="preserve">
    <value>mit Haftungserklärung</value>
  </data>
  <data name="MyChild" xml:space="preserve">
    <value>Mein Kind</value>
  </data>
  <data name="ParentGuardianDetails" xml:space="preserve">
    <value>Eltern / Erziehungsberechtigten Details</value>
  </data>
  <data name="Participating" xml:space="preserve">
    <value>Ich nehme teil</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Teilnehmer</value>
  </data>
  <data name="UseBookerDetails" xml:space="preserve">
    <value>Angaben des Buchenden verwenden</value>
  </data>
  <data name="JoinedOnline" xml:space="preserve">
    <value>Online-Anmeldedatum</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Bestätigungs-E-Mail</value>
  </data>
  <data name="EmailMismatch" xml:space="preserve">
    <value>E-Mail-Adressen sind unterschiedlich!</value>
  </data>
  <data name="ExistingCustomer" xml:space="preserve">
    <value>Bestehender Kunde?</value>
  </data>
  <data name="ExistingPurchase" xml:space="preserve">
    <value>Bitte gib deine Anmeldedaten ein, wenn du bereits Mitglied bist.</value>
  </data>
  <data name="HowHear" xml:space="preserve">
    <value>Wie bist du auf uns aufmerksam geworden?</value>
  </data>
  <data name="Remind" xml:space="preserve">
    <value>Gib deine registrierte E-Mail-Adresse ein und wir schicken dir eine E-Mail mit einem neuen Passwort.</value>
  </data>
  <data name="ReminderError" xml:space="preserve">
    <value>Es ist ein Fehler beim Versand der neuen Anmeldedaten aufgetreten.</value>
  </data>
  <data name="ReminderSent" xml:space="preserve">
    <value>Neue Anmeldedaten wurden an '{0}' gesendet.</value>
  </data>
  <data name="UnknownEmailAddress" xml:space="preserve">
    <value>Unbekannte E-Mail Adresse</value>
  </data>
  <data name="AllDetailsRequired" xml:space="preserve">
    <value>Bitte ergänze alle Angaben zu dieser Person</value>
  </data>
  <data name="AlreadyRegistered" xml:space="preserve">
    <value>Ich bin bereits registriert</value>
  </data>
  <data name="EmailRegex" xml:space="preserve">
    <value>[äöüÄÖÜß\w-]+([-+.][äöüÄÖÜß\w-]+)*@[äöüÄÖÜß\w-]+([-.][äöüÄÖÜß\w-]+)*\.[äöüÄÖÜß\w-]+([-.][äöüÄÖÜß\w-]+)*</value>
  </data>
  <data name="TownRegex" xml:space="preserve">
    <value>[a-zäöüA-ZÄÖÜß\s]*</value>
  </data>
  <data name="SupportedTitles" xml:space="preserve">
    <value>Herr:Frau:Frl.:Dr</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Ändern Sie Ihr Passwort?</value>
  </data>
</root>